
name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH into EC2 and deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.SSH_USER }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          echo "Starting deployment process..."
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "SSH key prepared"

          # Create environment file for web app
          cat > .env.web << EOF
          MONGODB_URI=${MONGODB_URI}
          NODE_ENV=production
          EOF

          # Copy environment file to EC2
          scp -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i private_key .env.web ${USER}@${HOST}:/home/ubuntu/graphbit-website/apps/web/.env
          
          # Cleanup local env file
          rm .env.web

          # SSH into EC2 and deploy with connection keep-alive settings
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -o ConnectTimeout=30 -i private_key ${USER}@${HOST} '
            echo "Connected to EC2 instance"
            cd /home/ubuntu/graphbit-website || exit 1
            echo "Changed to project directory"

            echo "Updating codebase..."
            git checkout main || git switch main
            git pull origin main
            echo "Code updated"

            echo "Stopping existing containers..."
            sudo docker compose down

            echo "Cleaning up Docker resources..."
            echo "Y" | sudo docker system prune

            echo "Rebuilding web container..."
            sudo docker compose build --no-cache web

            echo "Starting web container..."
            sudo docker compose up -d web

            echo "Checking container status..."
            sudo docker ps | grep graphbit-website-web || echo "Web container not found."

            echo "Waiting for web service to start..."
            sleep 30

            echo "Fetching recent web logs..."
            sudo docker logs graphbit-website-web-1 --tail 50 || echo "Web app logs not found."

            echo "Checking web service health..."
            curl -f http://localhost:3000 || echo "Web health check failed."
          '

      - name: Cleanup
        if: always()
        run: |
          echo "Starting cleanup..."
          rm -f private_key
          echo "Deployment process completed"

