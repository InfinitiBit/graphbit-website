name: Deploy to EC2
on:
    push:
        branches:
            - stage

env:
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
    SSH_USER: ubuntu
    EC2_HOST: ec2-3-1-90-70.ap-southeast-1.compute.amazonaws.com
    EC2_DIR: /home/ubuntu/graphbit-stage


jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install SSH key
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  echo "${{ env.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
                  chmod 600 ~/.ssh/id_rsa
            - name: SSH into EC2 and remove old code
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ env.EC2_HOST }}
                  username: ${{ env.SSH_USER }}
                  key: ${{ env.SSH_PRIVATE_KEY }}
                  script: |
                      sudo rm -rf ${{ env.EC2_DIR }}
                      
            - name: Copy code to EC2
              uses: appleboy/scp-action@master
              with:
                  host: ${{ env.EC2_HOST }}
                  username: ${{ env.SSH_USER }}
                  key: ${{ env.SSH_PRIVATE_KEY }}
                  source: .
                  target: ${{ env.EC2_DIR }}

            - name: Create .env files on EC2
              uses: appleboy/ssh-action@master
              with:
                   host: ${{ env.EC2_HOST }}
                   username: ${{ env.SSH_USER }}
                   key: ${{ env.SSH_PRIVATE_KEY }}
                   script: |
                      echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > ${{ env.EC2_DIR }}/apps/web/.env
            - name: SSH into EC2 and deploy code
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ env.EC2_HOST }}
                  username: ${{ env.SSH_USER }}
                  key: ${{ env.SSH_PRIVATE_KEY }}
                  script: |
                      cd ${{ env.EC2_DIR }}
                      echo "Y" | sudo docker system prune
                      sudo docker compose up --build -d
